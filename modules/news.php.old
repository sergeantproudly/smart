<?php

krnLoadLib('define');
krnLoadLib('settings');

class articles extends krn_abstract {

	function __construct() {
		global $_LEVEL;
		parent::__construct();
		
		$this->page = $this->db->getRow('SELECT Title, Header, Code, Content, SeoTitle, SeoKeywords, SeoDescription FROM static_pages WHERE Code = ?s', 'news');
		
		if ($this->newCode = $_LEVEL[2]) {
			$this->new = $this->db->getRow('SELECT Id, Title, Code, Description AS Text, Date, Image764_436 AS Image, IsCommon, SeoTitle, SeoKeywords, SeoDescription FROM news WHERE Code = ?s', $this->newCode);
			$this->pageTitle = $this->new['Title'];
			$this->breadCrumbs = GetBreadCrumbs(array(
				'Главная' => '/',
				$this->page['Title'] => $this->page['Code'] . '/'),
				$this->pageTitle);

		} else {
			$this->pageTitle = $this->page['Title'];
			/*
			$this->breadCrumbs = GetBreadCrumbs(array(
				'Главная' => '/'),
				$this->pageTitle);
			*/
		}	
	}	

	function GetResult() {
		$Blocks = krnLoadModuleByName('blocks');

		if ($this->newCode) {
			$this->content = $this->GetNew();
			
		} else {
			if ($_GET['page']) $this->pageIndex = $_GET['page'];
			$this->content = $this->GetNewsList();		
		}
		
		$result = strtr(krnLoadPageByTemplate($this->page['TemplateCode'] ?: 'base_static'), array(
			'<%META_KEYWORDS%>'		=> $this->new['SeoKeywords'] ?: $this->page['SeoKeywords'],
    		'<%META_DESCRIPTION%>'	=> $this->new['SeoDescription'] ?: $this->page['SeoDescription'],
    		'<%PAGE_TITLE%>'		=> $this->new['SeoTitle'] ?: $this->pageTitle,
    		'<%BREAD_CRUMBS%>'		=> $this->breadCrumbs,
    		'<%TITLE%>'				=> $this->page['Header'] ?: $this->page['Title'],
			'<%CONTENT%>'			=> $this->content,
			'<%BLOCK1%>'			=> $this->BlockOtherNews(),
		));
		
		$this->blocks = $Blocks->GetPageBlocks($this->page['Id']);
		foreach ($this->blocks as $i => $block) {
			$result = str_replace('<%BLOCK' . ($i + 1) . '%>', $block, $result);
		}
		return $result;
	}
	
	/** Список новостей */
	function GetNewsList() {
		$element = LoadTemplate('news_el');
		$content = '';

		$recsOnPage = $this->settings->GetSetting('NewsRecsOnPage', 18);
		$query = 'SELECT DISTINCT COUNT(Id) FROM news';
		$this->total = $this->db->getOne($query);

		$news = $this->db->getAll('SELECT Title, Date, Image411_270 AS Image, IsCommon, SourceUrl, Code FROM news ORDER BY Date DESC LIMIT ?i, ?i', ($this->pageIndex-1)*$recsOnPage, $this->pageIndex == 1 ? $recsOnPage+1 : $recsOnPage);
		foreach ($news as $new) {
			if ($new['SourceUrl']) {
				$sourceData = parse_url($new['SourceUrl']);
			}
			if ($new['Image']) {
				$new['Image'] = ' class="gradiented" style="background-image: url(\'' . $new['Image'] . '\');"';
			}

			$new['Link'] = '/' . $this->page['Code'] . '/' . $new['Code'] . '/';
			$new['Date'] = ModifiedDate($new['Date']);
			$new['Source'] = $new['SourceUrl'] ? '<a href="' . $new['SourceUrl'] . '" target="_blank" class="source">' . $sourceData['host'] . '</a>' : '';
			$content .= SetAtribs($element, $new);
		}
		$pagination = GetPagination($this->total, $recsOnPage, 6, $this->pageIndex);

		$result = strtr(LoadTemplate('news'), array(
			'<%TITLE%>'			=> $this->page['Header'] ?: $this->page['Title'],
			'<%CONTENT%>'		=> $content,
			'<%PAGINATION%>'	=> $pagination,
		));
		return $result;
	}

	/** Новость */
	function GetNew() {
		$result = strtr(LoadTemplate('new'), array(
			'<%TITLE%>'			=> $this->new['Title'],
			'<%DATE%>'			=> ModifiedDate($this->new['Date']),
			'<%ALT%>'			=> htmlspecialchars($this->new['Title'], ENT_QUOTES),
			'<%IMAGE%>'			=> $this->new['Image'] ? '<div class="photo"><img src="'.$this->new['Image'].'" alt="'.$this->new['Alt'].'" title="'.$this->new['Alt'].'"></div>' : '',
			'<%TEXT%>'			=> $this->new['Text'],
			'<%SHAREURL%>'		=> urlencode($this->settings->GetSetting('SiteUrl') . '/news/' . $this->new['Code']),
			'<%SHARETITLE%>'	=> htmlspecialchars($this->new['Title'], ENT_QUOTES),
			'<%SHAREIMAGE%>'	=> $this->new['Image'],
			'<%SHARETEXT%>'		=> htmlspecialchars(TrimText(strip_tags(str_replace('<br />', ' ', $this->new['Text'])), 300), ENT_QUOTES),
		));
		return $result;
	}
	
	/** Блок - Другие новости */
	function BlockOtherNews() {
		$element = LoadTemplate('bl_news_other_el');
		$content = '';
		
		$recsInBlock = $this->settings->GetSetting('NewsRecsInBlock', 3);
		
		$query = 'SELECT Id, Title, Code, Date, SourceUrl FROM news WHERE Id <> ?i AND IsCommon = ?i ORDER BY Date DESC LIMIT ?i, ?i';
		$news = $this->db->getAll($query, $this->new['Id'], $this->new['IsCommon'], 0, $recsInBlock);
		foreach ($news as $new) {
			if ($new['SourceUrl']) {
				$sourceData = parse_url($new['SourceUrl']);
			}

			$new['Link'] = '/news/' . $new['Code'] . '/';
			$new['Date'] = ModifiedDate($new['Date']);
			$new['Source'] = $new['SourceUrl'] ? '<a href="' . $new['SourceUrl'] . '" target="_blank" class="source">' . $sourceData['host'] . '</a>' : '';
			$content .= SetAtribs($element, $new);
		}
		
		$result = $content ? strtr(LoadTemplate('bl_news_other'), [
			'<%TITLE%>'		=> 'Другие новости',
			'<%CLASS%>'		=> $this->new['IsCommon'] ? ' sourced' : '',
			'<%CONTENT%>'	=> $content,
		]) : '';
		return $result;
	}
}

?>